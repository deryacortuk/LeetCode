  "Given the head of a singly linked list, reverse the list, and return the reversed list."
  
  # Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

1.Solution

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev, curr = None, head
        
        while curr:
            next = curr.next
            curr.next = prev
            prev = curr
            curr = next
            
        return prev
        
        
 2.Solution
 
 class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return head
        
        stack = []
        while head:
            stack.append(head)
            head = head.next
        
        head = stack.pop()
        while stack:
            item = stack.pop()
            item.next.next = item
            item.next = None
            
        return head
