" Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums."

1. Solution
class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        res = []
        nums_set = set(nums)
        for i in range(1, len(nums) + 1):
            if i not in nums_set:
                res.append(i)
        return res
        
2. Solution
class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        nums = nums
        missing = []
        
        for num in nums:
            nums[abs(num) - 1] = -1 * abs(nums[abs(num) - 1])
        
        
        for i in range(len(nums)):
            if(nums[i] > 0):
                missing.append(i + 1)
        
        return missing

3. Solution
class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        for i in range(len(nums)):
            num = nums[i]
            if num == 0:
                continue
            temp = nums[num-1]
            nums[num-1] = 0
            while temp:
                nums[temp-1], temp = 0, nums[temp-1]
                
        result = []
        for i in range(len(nums)):
            if nums[i] != 0:
                result.append(i+1)
                
        return result
